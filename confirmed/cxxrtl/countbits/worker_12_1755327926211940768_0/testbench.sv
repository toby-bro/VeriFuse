// Generated SystemVerilog testbench
// Do not edit this file directly : edit the template in internal/testgen/testbenches.go and generator.go

module top;
    logic clk;
    logic [7:0] in_d;
    logic [7:0] inj_data2_1755327927048_859;
    logic [7:0] inj_data3_1755327927048_672;
    logic [15:0] inj_data_in_1755327926991_898;
    logic [7:0] inj_i_in_1755327926544_780;
    logic inj_i_p1_1755327926568_45;
    logic inj_i_p2_1755327926568_809;
    logic [3:0] inj_in_data_1755327926663_217;
    logic [1:0] inj_sel_code_1755327927048_231;
    logic [3:0] inj_start_val_1755327926552_878;
    logic [63:0] inj_wide_a_1755327927255_788;
    logic [63:0] inj_wide_b_1755327927268_588;
    logic [63:0] inj_wide_c_1755327927268_34;
    logic rst;
    logic [3:0] cnt;
    logic [15:0] inj_data_out_1755327926991_399;
    logic [7:0] inj_final_val_1755327926552_676;
    logic [7:0] inj_o_out_1755327926544_931;
    logic inj_o_p_and_1755327926568_709;
    logic inj_o_p_xor_1755327926568_112;
    logic inj_o_sum_1755327926787_322;
    logic inj_out1_1755327926632_57;
    logic inj_out2_1755327926632_351;
    logic [7:0] inj_out_if_a_1755327927122_56;
    logic [7:0] inj_out_if_b_1755327927122_640;
    logic [3:0] inj_out_result_1755327926663_344;
    logic [7:0] inj_selected_data_1755327927048_911;
    logic [63:0] inj_wide_out_1755327927268_852;
    logic [63:0] inj_wide_out_1755327927324_1;
    logic [7:0] inj_wide_reg_1755327926787_940;

    countbits_ops #(

    ) dut (
        .clk(clk),
        .in_d(in_d),
        .inj_data2_1755327927048_859(inj_data2_1755327927048_859),
        .inj_data3_1755327927048_672(inj_data3_1755327927048_672),
        .inj_data_in_1755327926991_898(inj_data_in_1755327926991_898),
        .inj_i_in_1755327926544_780(inj_i_in_1755327926544_780),
        .inj_i_p1_1755327926568_45(inj_i_p1_1755327926568_45),
        .inj_i_p2_1755327926568_809(inj_i_p2_1755327926568_809),
        .inj_in_data_1755327926663_217(inj_in_data_1755327926663_217),
        .inj_sel_code_1755327927048_231(inj_sel_code_1755327927048_231),
        .inj_start_val_1755327926552_878(inj_start_val_1755327926552_878),
        .inj_wide_a_1755327927255_788(inj_wide_a_1755327927255_788),
        .inj_wide_b_1755327927268_588(inj_wide_b_1755327927268_588),
        .inj_wide_c_1755327927268_34(inj_wide_c_1755327927268_34),
        .rst(rst),
        .cnt(cnt),
        .inj_data_out_1755327926991_399(inj_data_out_1755327926991_399),
        .inj_final_val_1755327926552_676(inj_final_val_1755327926552_676),
        .inj_o_out_1755327926544_931(inj_o_out_1755327926544_931),
        .inj_o_p_and_1755327926568_709(inj_o_p_and_1755327926568_709),
        .inj_o_p_xor_1755327926568_112(inj_o_p_xor_1755327926568_112),
        .inj_o_sum_1755327926787_322(inj_o_sum_1755327926787_322),
        .inj_out1_1755327926632_57(inj_out1_1755327926632_57),
        .inj_out2_1755327926632_351(inj_out2_1755327926632_351),
        .inj_out_if_a_1755327927122_56(inj_out_if_a_1755327927122_56),
        .inj_out_if_b_1755327927122_640(inj_out_if_b_1755327927122_640),
        .inj_out_result_1755327926663_344(inj_out_result_1755327926663_344),
        .inj_selected_data_1755327927048_911(inj_selected_data_1755327927048_911),
        .inj_wide_out_1755327927268_852(inj_wide_out_1755327927268_852),
        .inj_wide_out_1755327927324_1(inj_wide_out_1755327927324_1),
        .inj_wide_reg_1755327926787_940(inj_wide_reg_1755327926787_940)
    );


    initial begin
        string line;
        int fd;
        int status;

        // Read 13 input files
        clk = 0;

        fd = $fopen("input_in_d.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_in_d.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", in_d);
        $fclose(fd);

        fd = $fopen("input_inj_data2_1755327927048_859.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_data2_1755327927048_859.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_data2_1755327927048_859);
        $fclose(fd);

        fd = $fopen("input_inj_data3_1755327927048_672.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_data3_1755327927048_672.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_data3_1755327927048_672);
        $fclose(fd);

        fd = $fopen("input_inj_data_in_1755327926991_898.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_data_in_1755327926991_898.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_data_in_1755327926991_898);
        $fclose(fd);

        fd = $fopen("input_inj_i_in_1755327926544_780.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_i_in_1755327926544_780.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_i_in_1755327926544_780);
        $fclose(fd);

        fd = $fopen("input_inj_i_p1_1755327926568_45.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_i_p1_1755327926568_45.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_i_p1_1755327926568_45);
        $fclose(fd);

        fd = $fopen("input_inj_i_p2_1755327926568_809.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_i_p2_1755327926568_809.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_i_p2_1755327926568_809);
        $fclose(fd);

        fd = $fopen("input_inj_in_data_1755327926663_217.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_in_data_1755327926663_217.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_in_data_1755327926663_217);
        $fclose(fd);

        fd = $fopen("input_inj_sel_code_1755327927048_231.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_sel_code_1755327927048_231.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_sel_code_1755327927048_231);
        $fclose(fd);

        fd = $fopen("input_inj_start_val_1755327926552_878.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_start_val_1755327926552_878.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_start_val_1755327926552_878);
        $fclose(fd);

        fd = $fopen("input_inj_wide_a_1755327927255_788.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_wide_a_1755327927255_788.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_wide_a_1755327927255_788);
        $fclose(fd);

        fd = $fopen("input_inj_wide_b_1755327927268_588.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_wide_b_1755327927268_588.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_wide_b_1755327927268_588);
        $fclose(fd);

        fd = $fopen("input_inj_wide_c_1755327927268_34.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_wide_c_1755327927268_34.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_wide_c_1755327927268_34);
        $fclose(fd);
        rst = 0;


        // Toggle reset if a reset signal was identified

        // Toggle reset signal rst
        rst = 1; // Assert reset (active high)
        #10;
        rst = 0; // De-assert reset
        #10; // Wait after de-asserting reset


        // Toggle clock signals

        // Toggle clocks for several cycles with timeout protection
        // Set simulation timeout to prevent infinite loops
        fork
            begin
                #780;
                $display("ERROR: Simulation timeout after 780 time units");
                $finish;
            end
            begin
                repeat (50) begin
                    clk = 0;
                    #5;
                    clk = 1;
                    #5;
                end
            end
        join_any
        disable fork; // Kill timeout process


        // Allow module to process and settle
        #10; // Increased delay for settling
        
        // Additional clock cycles to ensure all sequential logic settles
        #10;
        #10;

        // Write 16 output files

        fd = $fopen("output_cnt.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_cnt.hex' for port 'cnt'.", "output_cnt.hex", "cnt");
            $finish;
        end
        for (int i = 3; i >= 0; i--) begin
            $fwrite(fd, "%b", cnt[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_data_out_1755327926991_399.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_data_out_1755327926991_399.hex' for port 'inj_data_out_1755327926991_399'.", "output_inj_data_out_1755327926991_399.hex", "inj_data_out_1755327926991_399");
            $finish;
        end
        for (int i = 15; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_data_out_1755327926991_399[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_final_val_1755327926552_676.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_final_val_1755327926552_676.hex' for port 'inj_final_val_1755327926552_676'.", "output_inj_final_val_1755327926552_676.hex", "inj_final_val_1755327926552_676");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_final_val_1755327926552_676[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_o_out_1755327926544_931.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_o_out_1755327926544_931.hex' for port 'inj_o_out_1755327926544_931'.", "output_inj_o_out_1755327926544_931.hex", "inj_o_out_1755327926544_931");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_o_out_1755327926544_931[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_o_p_and_1755327926568_709.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_o_p_and_1755327926568_709.hex' for port 'inj_o_p_and_1755327926568_709'.", "output_inj_o_p_and_1755327926568_709.hex", "inj_o_p_and_1755327926568_709");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_o_p_and_1755327926568_709);
        $fclose(fd);

        fd = $fopen("output_inj_o_p_xor_1755327926568_112.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_o_p_xor_1755327926568_112.hex' for port 'inj_o_p_xor_1755327926568_112'.", "output_inj_o_p_xor_1755327926568_112.hex", "inj_o_p_xor_1755327926568_112");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_o_p_xor_1755327926568_112);
        $fclose(fd);

        fd = $fopen("output_inj_o_sum_1755327926787_322.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_o_sum_1755327926787_322.hex' for port 'inj_o_sum_1755327926787_322'.", "output_inj_o_sum_1755327926787_322.hex", "inj_o_sum_1755327926787_322");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_o_sum_1755327926787_322);
        $fclose(fd);

        fd = $fopen("output_inj_out1_1755327926632_57.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out1_1755327926632_57.hex' for port 'inj_out1_1755327926632_57'.", "output_inj_out1_1755327926632_57.hex", "inj_out1_1755327926632_57");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_out1_1755327926632_57);
        $fclose(fd);

        fd = $fopen("output_inj_out2_1755327926632_351.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out2_1755327926632_351.hex' for port 'inj_out2_1755327926632_351'.", "output_inj_out2_1755327926632_351.hex", "inj_out2_1755327926632_351");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_out2_1755327926632_351);
        $fclose(fd);

        fd = $fopen("output_inj_out_if_a_1755327927122_56.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_if_a_1755327927122_56.hex' for port 'inj_out_if_a_1755327927122_56'.", "output_inj_out_if_a_1755327927122_56.hex", "inj_out_if_a_1755327927122_56");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_if_a_1755327927122_56[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_if_b_1755327927122_640.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_if_b_1755327927122_640.hex' for port 'inj_out_if_b_1755327927122_640'.", "output_inj_out_if_b_1755327927122_640.hex", "inj_out_if_b_1755327927122_640");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_if_b_1755327927122_640[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_result_1755327926663_344.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_result_1755327926663_344.hex' for port 'inj_out_result_1755327926663_344'.", "output_inj_out_result_1755327926663_344.hex", "inj_out_result_1755327926663_344");
            $finish;
        end
        for (int i = 3; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_result_1755327926663_344[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_selected_data_1755327927048_911.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_selected_data_1755327927048_911.hex' for port 'inj_selected_data_1755327927048_911'.", "output_inj_selected_data_1755327927048_911.hex", "inj_selected_data_1755327927048_911");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_selected_data_1755327927048_911[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_wide_out_1755327927268_852.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_wide_out_1755327927268_852.hex' for port 'inj_wide_out_1755327927268_852'.", "output_inj_wide_out_1755327927268_852.hex", "inj_wide_out_1755327927268_852");
            $finish;
        end
        for (int i = 63; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_wide_out_1755327927268_852[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_wide_out_1755327927324_1.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_wide_out_1755327927324_1.hex' for port 'inj_wide_out_1755327927324_1'.", "output_inj_wide_out_1755327927324_1.hex", "inj_wide_out_1755327927324_1");
            $finish;
        end
        for (int i = 63; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_wide_out_1755327927324_1[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_wide_reg_1755327926787_940.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_wide_reg_1755327926787_940.hex' for port 'inj_wide_reg_1755327926787_940'.", "output_inj_wide_reg_1755327926787_940.hex", "inj_wide_reg_1755327926787_940");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_wide_reg_1755327926787_940[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);


        $finish;
    end
endmodule