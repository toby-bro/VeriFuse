// Generated C++ testbench for CXXRTL
// Do not edit this file directly : edit the template in internal/testgen/testbenches.go and generator.go
#include "countbits_ops.cc" // CXXRTL generated header for the module

#include <fstream>
#include <iostream>
#include <iomanip>
#include <cstdint>
#include <string>
#include <sstream>
#include <type_traits>

// Template helpers to detect and work with both value<> and wire<> types
template<typename T>
struct has_curr {
    template<typename U>
    static auto test(int) -> decltype(std::declval<U>().curr, std::true_type{});
    template<typename>
    static std::false_type test(...);
    using type = decltype(test<T>(0));
    static constexpr bool value = type::value;
};

// Helper function to get port value - works with both value<> and wire<>
template<typename T, typename PortType>
typename std::enable_if<has_curr<PortType>::value, T>::type
_get_port_value(const PortType& port) {
    return port.curr.template get<T>();
}

template<typename T, typename PortType>
typename std::enable_if<!has_curr<PortType>::value, T>::type
_get_port_value(const PortType& port) {
    return port.template get<T>();
}

// Helper function to get port bit - works with both value<> and wire<>
template<typename PortType>
typename std::enable_if<has_curr<PortType>::value, bool>::type
_get_port_value(const PortType& port, int bit) {
    return port.curr.bit(bit);
}

template<typename PortType>
typename std::enable_if<!has_curr<PortType>::value, bool>::type
_get_port_value(const PortType& port, int bit) {
    return port.bit(bit);
}

// Helper function to get wide port value - works with both value<> and wire<>
template<typename PortType>
auto _get_port_value_wide(const PortType& port) -> typename std::enable_if<has_curr<PortType>::value, decltype(port.curr)>::type {
    return port.curr;
}

template<typename PortType>
auto _get_port_value_wide(const PortType& port) -> typename std::enable_if<!has_curr<PortType>::value, PortType>::type {
    return port;
}

// Helper function to set port value - works with both value<> and wire<>
template<typename T, typename PortType>
typename std::enable_if<has_curr<PortType>::value, void>::type
_set_port_value(PortType& port, T value) {
    port.next.template set<T>(value);
}

template<typename T, typename PortType>
typename std::enable_if<!has_curr<PortType>::value, void>::type
_set_port_value(PortType& port, T value) {
    port.template set<T>(value);
}

// Helper function to set wide port value - works with both value<> and wire<>
template<typename PortType, typename ValueType>
typename std::enable_if<has_curr<PortType>::value, void>::type
_set_port_value_wide(PortType& port, const ValueType& value) {
    port.next = value;
}

template<typename PortType, typename ValueType>
typename std::enable_if<!has_curr<PortType>::value, void>::type
_set_port_value_wide(PortType& port, const ValueType& value) {
    port = value;
}

int main(int argc, char** argv) {
    cxxrtl_design::p_countbits__ops countbits_ops_i; // DUT instance

    // Declare input variables
    bool clk;
    uint8_t in_d;
    uint8_t inj_in_a_1755377830619_624;
    bool inj_in_a_1755377830739_416;
    uint8_t inj_in_a_1755377830741_970;
    uint8_t inj_in_b_1755377830619_91;
    uint8_t inj_in_b_1755377830741_259;
    uint8_t inj_in_c_1755377830619_518;
    bool inj_in_cond_neq_lhs_1755377830619_284;
    bool inj_in_cond_neq_rhs_1755377830619_112;
    bool inj_in_cond_not_1755377830619_249;
    uint8_t inj_in_not_else_1755377830619_148;
    uint8_t inj_in_not_then_1755377830619_89;
    uint32_t inj_in_val_1755377830600_794;
    uint32_t inj_in_val_1755377830612_330;
    bool inj_select_a_1755377830600_823;
    bool rst;


    // Read input values
    std::ifstream clk_file("input_clk.hex");
    if (!clk_file.is_open()) {
        std::cerr << "Failed to open input file for clk: input_clk.hex" << std::endl;
        return 1;
    }
    std::string clk_hex_str;
    clk_file >> clk_hex_str;
    if (clk_file.fail() && !clk_file.eof()) {
        std::cerr << "Failed to read hex string for clk from input file: input_clk.hex" << std::endl;
        clk_file.close();
        return 1;
    }
    std::stringstream ss_clk;
    ss_clk << std::hex << clk_hex_str;
    unsigned int temp_clk;
    if (!(ss_clk >> temp_clk)) {
        std::cerr << "Failed to parse hex value for clk: " << clk_hex_str << std::endl;
        clk_file.close();
        return 1;
    }
    clk = static_cast<bool>(temp_clk);
    clk_file.close();

    std::ifstream in_d_file("input_in_d.hex");
    if (!in_d_file.is_open()) {
        std::cerr << "Failed to open input file for in_d: input_in_d.hex" << std::endl;
        return 1;
    }
    std::string in_d_hex_str;
    in_d_file >> in_d_hex_str;
    if (in_d_file.fail() && !in_d_file.eof()) {
        std::cerr << "Failed to read hex string for in_d from input file: input_in_d.hex" << std::endl;
        in_d_file.close();
        return 1;
    }
    std::stringstream ss_in_d;
    ss_in_d << std::hex << in_d_hex_str;
    unsigned int temp_in_d;
    if (!(ss_in_d >> temp_in_d)) {
        std::cerr << "Failed to parse hex value for in_d: " << in_d_hex_str << std::endl;
        in_d_file.close();
        return 1;
    }
    in_d = static_cast<uint8_t>(temp_in_d);
    in_d_file.close();

    std::ifstream inj_in_a_1755377830619_624_file("input_inj_in_a_1755377830619_624.hex");
    if (!inj_in_a_1755377830619_624_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_a_1755377830619_624: input_inj_in_a_1755377830619_624.hex" << std::endl;
        return 1;
    }
    std::string inj_in_a_1755377830619_624_hex_str;
    inj_in_a_1755377830619_624_file >> inj_in_a_1755377830619_624_hex_str;
    if (inj_in_a_1755377830619_624_file.fail() && !inj_in_a_1755377830619_624_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_a_1755377830619_624 from input file: input_inj_in_a_1755377830619_624.hex" << std::endl;
        inj_in_a_1755377830619_624_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_a_1755377830619_624;
    ss_inj_in_a_1755377830619_624 << std::hex << inj_in_a_1755377830619_624_hex_str;
    unsigned int temp_inj_in_a_1755377830619_624;
    if (!(ss_inj_in_a_1755377830619_624 >> temp_inj_in_a_1755377830619_624)) {
        std::cerr << "Failed to parse hex value for inj_in_a_1755377830619_624: " << inj_in_a_1755377830619_624_hex_str << std::endl;
        inj_in_a_1755377830619_624_file.close();
        return 1;
    }
    inj_in_a_1755377830619_624 = static_cast<uint8_t>(temp_inj_in_a_1755377830619_624);
    inj_in_a_1755377830619_624_file.close();

    std::ifstream inj_in_a_1755377830739_416_file("input_inj_in_a_1755377830739_416.hex");
    if (!inj_in_a_1755377830739_416_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_a_1755377830739_416: input_inj_in_a_1755377830739_416.hex" << std::endl;
        return 1;
    }
    std::string inj_in_a_1755377830739_416_hex_str;
    inj_in_a_1755377830739_416_file >> inj_in_a_1755377830739_416_hex_str;
    if (inj_in_a_1755377830739_416_file.fail() && !inj_in_a_1755377830739_416_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_a_1755377830739_416 from input file: input_inj_in_a_1755377830739_416.hex" << std::endl;
        inj_in_a_1755377830739_416_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_a_1755377830739_416;
    ss_inj_in_a_1755377830739_416 << std::hex << inj_in_a_1755377830739_416_hex_str;
    unsigned int temp_inj_in_a_1755377830739_416;
    if (!(ss_inj_in_a_1755377830739_416 >> temp_inj_in_a_1755377830739_416)) {
        std::cerr << "Failed to parse hex value for inj_in_a_1755377830739_416: " << inj_in_a_1755377830739_416_hex_str << std::endl;
        inj_in_a_1755377830739_416_file.close();
        return 1;
    }
    inj_in_a_1755377830739_416 = static_cast<bool>(temp_inj_in_a_1755377830739_416);
    inj_in_a_1755377830739_416_file.close();

    std::ifstream inj_in_a_1755377830741_970_file("input_inj_in_a_1755377830741_970.hex");
    if (!inj_in_a_1755377830741_970_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_a_1755377830741_970: input_inj_in_a_1755377830741_970.hex" << std::endl;
        return 1;
    }
    std::string inj_in_a_1755377830741_970_hex_str;
    inj_in_a_1755377830741_970_file >> inj_in_a_1755377830741_970_hex_str;
    if (inj_in_a_1755377830741_970_file.fail() && !inj_in_a_1755377830741_970_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_a_1755377830741_970 from input file: input_inj_in_a_1755377830741_970.hex" << std::endl;
        inj_in_a_1755377830741_970_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_a_1755377830741_970;
    ss_inj_in_a_1755377830741_970 << std::hex << inj_in_a_1755377830741_970_hex_str;
    unsigned int temp_inj_in_a_1755377830741_970;
    if (!(ss_inj_in_a_1755377830741_970 >> temp_inj_in_a_1755377830741_970)) {
        std::cerr << "Failed to parse hex value for inj_in_a_1755377830741_970: " << inj_in_a_1755377830741_970_hex_str << std::endl;
        inj_in_a_1755377830741_970_file.close();
        return 1;
    }
    inj_in_a_1755377830741_970 = static_cast<uint8_t>(temp_inj_in_a_1755377830741_970);
    inj_in_a_1755377830741_970_file.close();

    std::ifstream inj_in_b_1755377830619_91_file("input_inj_in_b_1755377830619_91.hex");
    if (!inj_in_b_1755377830619_91_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_b_1755377830619_91: input_inj_in_b_1755377830619_91.hex" << std::endl;
        return 1;
    }
    std::string inj_in_b_1755377830619_91_hex_str;
    inj_in_b_1755377830619_91_file >> inj_in_b_1755377830619_91_hex_str;
    if (inj_in_b_1755377830619_91_file.fail() && !inj_in_b_1755377830619_91_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_b_1755377830619_91 from input file: input_inj_in_b_1755377830619_91.hex" << std::endl;
        inj_in_b_1755377830619_91_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_b_1755377830619_91;
    ss_inj_in_b_1755377830619_91 << std::hex << inj_in_b_1755377830619_91_hex_str;
    unsigned int temp_inj_in_b_1755377830619_91;
    if (!(ss_inj_in_b_1755377830619_91 >> temp_inj_in_b_1755377830619_91)) {
        std::cerr << "Failed to parse hex value for inj_in_b_1755377830619_91: " << inj_in_b_1755377830619_91_hex_str << std::endl;
        inj_in_b_1755377830619_91_file.close();
        return 1;
    }
    inj_in_b_1755377830619_91 = static_cast<uint8_t>(temp_inj_in_b_1755377830619_91);
    inj_in_b_1755377830619_91_file.close();

    std::ifstream inj_in_b_1755377830741_259_file("input_inj_in_b_1755377830741_259.hex");
    if (!inj_in_b_1755377830741_259_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_b_1755377830741_259: input_inj_in_b_1755377830741_259.hex" << std::endl;
        return 1;
    }
    std::string inj_in_b_1755377830741_259_hex_str;
    inj_in_b_1755377830741_259_file >> inj_in_b_1755377830741_259_hex_str;
    if (inj_in_b_1755377830741_259_file.fail() && !inj_in_b_1755377830741_259_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_b_1755377830741_259 from input file: input_inj_in_b_1755377830741_259.hex" << std::endl;
        inj_in_b_1755377830741_259_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_b_1755377830741_259;
    ss_inj_in_b_1755377830741_259 << std::hex << inj_in_b_1755377830741_259_hex_str;
    unsigned int temp_inj_in_b_1755377830741_259;
    if (!(ss_inj_in_b_1755377830741_259 >> temp_inj_in_b_1755377830741_259)) {
        std::cerr << "Failed to parse hex value for inj_in_b_1755377830741_259: " << inj_in_b_1755377830741_259_hex_str << std::endl;
        inj_in_b_1755377830741_259_file.close();
        return 1;
    }
    inj_in_b_1755377830741_259 = static_cast<uint8_t>(temp_inj_in_b_1755377830741_259);
    inj_in_b_1755377830741_259_file.close();

    std::ifstream inj_in_c_1755377830619_518_file("input_inj_in_c_1755377830619_518.hex");
    if (!inj_in_c_1755377830619_518_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_c_1755377830619_518: input_inj_in_c_1755377830619_518.hex" << std::endl;
        return 1;
    }
    std::string inj_in_c_1755377830619_518_hex_str;
    inj_in_c_1755377830619_518_file >> inj_in_c_1755377830619_518_hex_str;
    if (inj_in_c_1755377830619_518_file.fail() && !inj_in_c_1755377830619_518_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_c_1755377830619_518 from input file: input_inj_in_c_1755377830619_518.hex" << std::endl;
        inj_in_c_1755377830619_518_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_c_1755377830619_518;
    ss_inj_in_c_1755377830619_518 << std::hex << inj_in_c_1755377830619_518_hex_str;
    unsigned int temp_inj_in_c_1755377830619_518;
    if (!(ss_inj_in_c_1755377830619_518 >> temp_inj_in_c_1755377830619_518)) {
        std::cerr << "Failed to parse hex value for inj_in_c_1755377830619_518: " << inj_in_c_1755377830619_518_hex_str << std::endl;
        inj_in_c_1755377830619_518_file.close();
        return 1;
    }
    inj_in_c_1755377830619_518 = static_cast<uint8_t>(temp_inj_in_c_1755377830619_518);
    inj_in_c_1755377830619_518_file.close();

    std::ifstream inj_in_cond_neq_lhs_1755377830619_284_file("input_inj_in_cond_neq_lhs_1755377830619_284.hex");
    if (!inj_in_cond_neq_lhs_1755377830619_284_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_cond_neq_lhs_1755377830619_284: input_inj_in_cond_neq_lhs_1755377830619_284.hex" << std::endl;
        return 1;
    }
    std::string inj_in_cond_neq_lhs_1755377830619_284_hex_str;
    inj_in_cond_neq_lhs_1755377830619_284_file >> inj_in_cond_neq_lhs_1755377830619_284_hex_str;
    if (inj_in_cond_neq_lhs_1755377830619_284_file.fail() && !inj_in_cond_neq_lhs_1755377830619_284_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_cond_neq_lhs_1755377830619_284 from input file: input_inj_in_cond_neq_lhs_1755377830619_284.hex" << std::endl;
        inj_in_cond_neq_lhs_1755377830619_284_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_cond_neq_lhs_1755377830619_284;
    ss_inj_in_cond_neq_lhs_1755377830619_284 << std::hex << inj_in_cond_neq_lhs_1755377830619_284_hex_str;
    unsigned int temp_inj_in_cond_neq_lhs_1755377830619_284;
    if (!(ss_inj_in_cond_neq_lhs_1755377830619_284 >> temp_inj_in_cond_neq_lhs_1755377830619_284)) {
        std::cerr << "Failed to parse hex value for inj_in_cond_neq_lhs_1755377830619_284: " << inj_in_cond_neq_lhs_1755377830619_284_hex_str << std::endl;
        inj_in_cond_neq_lhs_1755377830619_284_file.close();
        return 1;
    }
    inj_in_cond_neq_lhs_1755377830619_284 = static_cast<bool>(temp_inj_in_cond_neq_lhs_1755377830619_284);
    inj_in_cond_neq_lhs_1755377830619_284_file.close();

    std::ifstream inj_in_cond_neq_rhs_1755377830619_112_file("input_inj_in_cond_neq_rhs_1755377830619_112.hex");
    if (!inj_in_cond_neq_rhs_1755377830619_112_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_cond_neq_rhs_1755377830619_112: input_inj_in_cond_neq_rhs_1755377830619_112.hex" << std::endl;
        return 1;
    }
    std::string inj_in_cond_neq_rhs_1755377830619_112_hex_str;
    inj_in_cond_neq_rhs_1755377830619_112_file >> inj_in_cond_neq_rhs_1755377830619_112_hex_str;
    if (inj_in_cond_neq_rhs_1755377830619_112_file.fail() && !inj_in_cond_neq_rhs_1755377830619_112_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_cond_neq_rhs_1755377830619_112 from input file: input_inj_in_cond_neq_rhs_1755377830619_112.hex" << std::endl;
        inj_in_cond_neq_rhs_1755377830619_112_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_cond_neq_rhs_1755377830619_112;
    ss_inj_in_cond_neq_rhs_1755377830619_112 << std::hex << inj_in_cond_neq_rhs_1755377830619_112_hex_str;
    unsigned int temp_inj_in_cond_neq_rhs_1755377830619_112;
    if (!(ss_inj_in_cond_neq_rhs_1755377830619_112 >> temp_inj_in_cond_neq_rhs_1755377830619_112)) {
        std::cerr << "Failed to parse hex value for inj_in_cond_neq_rhs_1755377830619_112: " << inj_in_cond_neq_rhs_1755377830619_112_hex_str << std::endl;
        inj_in_cond_neq_rhs_1755377830619_112_file.close();
        return 1;
    }
    inj_in_cond_neq_rhs_1755377830619_112 = static_cast<bool>(temp_inj_in_cond_neq_rhs_1755377830619_112);
    inj_in_cond_neq_rhs_1755377830619_112_file.close();

    std::ifstream inj_in_cond_not_1755377830619_249_file("input_inj_in_cond_not_1755377830619_249.hex");
    if (!inj_in_cond_not_1755377830619_249_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_cond_not_1755377830619_249: input_inj_in_cond_not_1755377830619_249.hex" << std::endl;
        return 1;
    }
    std::string inj_in_cond_not_1755377830619_249_hex_str;
    inj_in_cond_not_1755377830619_249_file >> inj_in_cond_not_1755377830619_249_hex_str;
    if (inj_in_cond_not_1755377830619_249_file.fail() && !inj_in_cond_not_1755377830619_249_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_cond_not_1755377830619_249 from input file: input_inj_in_cond_not_1755377830619_249.hex" << std::endl;
        inj_in_cond_not_1755377830619_249_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_cond_not_1755377830619_249;
    ss_inj_in_cond_not_1755377830619_249 << std::hex << inj_in_cond_not_1755377830619_249_hex_str;
    unsigned int temp_inj_in_cond_not_1755377830619_249;
    if (!(ss_inj_in_cond_not_1755377830619_249 >> temp_inj_in_cond_not_1755377830619_249)) {
        std::cerr << "Failed to parse hex value for inj_in_cond_not_1755377830619_249: " << inj_in_cond_not_1755377830619_249_hex_str << std::endl;
        inj_in_cond_not_1755377830619_249_file.close();
        return 1;
    }
    inj_in_cond_not_1755377830619_249 = static_cast<bool>(temp_inj_in_cond_not_1755377830619_249);
    inj_in_cond_not_1755377830619_249_file.close();

    std::ifstream inj_in_not_else_1755377830619_148_file("input_inj_in_not_else_1755377830619_148.hex");
    if (!inj_in_not_else_1755377830619_148_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_not_else_1755377830619_148: input_inj_in_not_else_1755377830619_148.hex" << std::endl;
        return 1;
    }
    std::string inj_in_not_else_1755377830619_148_hex_str;
    inj_in_not_else_1755377830619_148_file >> inj_in_not_else_1755377830619_148_hex_str;
    if (inj_in_not_else_1755377830619_148_file.fail() && !inj_in_not_else_1755377830619_148_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_not_else_1755377830619_148 from input file: input_inj_in_not_else_1755377830619_148.hex" << std::endl;
        inj_in_not_else_1755377830619_148_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_not_else_1755377830619_148;
    ss_inj_in_not_else_1755377830619_148 << std::hex << inj_in_not_else_1755377830619_148_hex_str;
    unsigned int temp_inj_in_not_else_1755377830619_148;
    if (!(ss_inj_in_not_else_1755377830619_148 >> temp_inj_in_not_else_1755377830619_148)) {
        std::cerr << "Failed to parse hex value for inj_in_not_else_1755377830619_148: " << inj_in_not_else_1755377830619_148_hex_str << std::endl;
        inj_in_not_else_1755377830619_148_file.close();
        return 1;
    }
    inj_in_not_else_1755377830619_148 = static_cast<uint8_t>(temp_inj_in_not_else_1755377830619_148);
    inj_in_not_else_1755377830619_148_file.close();

    std::ifstream inj_in_not_then_1755377830619_89_file("input_inj_in_not_then_1755377830619_89.hex");
    if (!inj_in_not_then_1755377830619_89_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_not_then_1755377830619_89: input_inj_in_not_then_1755377830619_89.hex" << std::endl;
        return 1;
    }
    std::string inj_in_not_then_1755377830619_89_hex_str;
    inj_in_not_then_1755377830619_89_file >> inj_in_not_then_1755377830619_89_hex_str;
    if (inj_in_not_then_1755377830619_89_file.fail() && !inj_in_not_then_1755377830619_89_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_not_then_1755377830619_89 from input file: input_inj_in_not_then_1755377830619_89.hex" << std::endl;
        inj_in_not_then_1755377830619_89_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_not_then_1755377830619_89;
    ss_inj_in_not_then_1755377830619_89 << std::hex << inj_in_not_then_1755377830619_89_hex_str;
    unsigned int temp_inj_in_not_then_1755377830619_89;
    if (!(ss_inj_in_not_then_1755377830619_89 >> temp_inj_in_not_then_1755377830619_89)) {
        std::cerr << "Failed to parse hex value for inj_in_not_then_1755377830619_89: " << inj_in_not_then_1755377830619_89_hex_str << std::endl;
        inj_in_not_then_1755377830619_89_file.close();
        return 1;
    }
    inj_in_not_then_1755377830619_89 = static_cast<uint8_t>(temp_inj_in_not_then_1755377830619_89);
    inj_in_not_then_1755377830619_89_file.close();

    std::ifstream inj_in_val_1755377830600_794_file("input_inj_in_val_1755377830600_794.hex");
    if (!inj_in_val_1755377830600_794_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_val_1755377830600_794: input_inj_in_val_1755377830600_794.hex" << std::endl;
        return 1;
    }
    std::string inj_in_val_1755377830600_794_hex_str;
    inj_in_val_1755377830600_794_file >> inj_in_val_1755377830600_794_hex_str;
    if (inj_in_val_1755377830600_794_file.fail() && !inj_in_val_1755377830600_794_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_val_1755377830600_794 from input file: input_inj_in_val_1755377830600_794.hex" << std::endl;
        inj_in_val_1755377830600_794_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_val_1755377830600_794;
    ss_inj_in_val_1755377830600_794 << std::hex << inj_in_val_1755377830600_794_hex_str;
    if (!(ss_inj_in_val_1755377830600_794 >> inj_in_val_1755377830600_794)) {
        std::cerr << "Failed to parse hex value for inj_in_val_1755377830600_794: " << inj_in_val_1755377830600_794_hex_str << std::endl;
        inj_in_val_1755377830600_794_file.close();
        return 1;
    }
    inj_in_val_1755377830600_794_file.close();

    std::ifstream inj_in_val_1755377830612_330_file("input_inj_in_val_1755377830612_330.hex");
    if (!inj_in_val_1755377830612_330_file.is_open()) {
        std::cerr << "Failed to open input file for inj_in_val_1755377830612_330: input_inj_in_val_1755377830612_330.hex" << std::endl;
        return 1;
    }
    std::string inj_in_val_1755377830612_330_hex_str;
    inj_in_val_1755377830612_330_file >> inj_in_val_1755377830612_330_hex_str;
    if (inj_in_val_1755377830612_330_file.fail() && !inj_in_val_1755377830612_330_file.eof()) {
        std::cerr << "Failed to read hex string for inj_in_val_1755377830612_330 from input file: input_inj_in_val_1755377830612_330.hex" << std::endl;
        inj_in_val_1755377830612_330_file.close();
        return 1;
    }
    std::stringstream ss_inj_in_val_1755377830612_330;
    ss_inj_in_val_1755377830612_330 << std::hex << inj_in_val_1755377830612_330_hex_str;
    if (!(ss_inj_in_val_1755377830612_330 >> inj_in_val_1755377830612_330)) {
        std::cerr << "Failed to parse hex value for inj_in_val_1755377830612_330: " << inj_in_val_1755377830612_330_hex_str << std::endl;
        inj_in_val_1755377830612_330_file.close();
        return 1;
    }
    inj_in_val_1755377830612_330_file.close();

    std::ifstream inj_select_a_1755377830600_823_file("input_inj_select_a_1755377830600_823.hex");
    if (!inj_select_a_1755377830600_823_file.is_open()) {
        std::cerr << "Failed to open input file for inj_select_a_1755377830600_823: input_inj_select_a_1755377830600_823.hex" << std::endl;
        return 1;
    }
    std::string inj_select_a_1755377830600_823_hex_str;
    inj_select_a_1755377830600_823_file >> inj_select_a_1755377830600_823_hex_str;
    if (inj_select_a_1755377830600_823_file.fail() && !inj_select_a_1755377830600_823_file.eof()) {
        std::cerr << "Failed to read hex string for inj_select_a_1755377830600_823 from input file: input_inj_select_a_1755377830600_823.hex" << std::endl;
        inj_select_a_1755377830600_823_file.close();
        return 1;
    }
    std::stringstream ss_inj_select_a_1755377830600_823;
    ss_inj_select_a_1755377830600_823 << std::hex << inj_select_a_1755377830600_823_hex_str;
    unsigned int temp_inj_select_a_1755377830600_823;
    if (!(ss_inj_select_a_1755377830600_823 >> temp_inj_select_a_1755377830600_823)) {
        std::cerr << "Failed to parse hex value for inj_select_a_1755377830600_823: " << inj_select_a_1755377830600_823_hex_str << std::endl;
        inj_select_a_1755377830600_823_file.close();
        return 1;
    }
    inj_select_a_1755377830600_823 = static_cast<bool>(temp_inj_select_a_1755377830600_823);
    inj_select_a_1755377830600_823_file.close();

    std::ifstream rst_file("input_rst.hex");
    if (!rst_file.is_open()) {
        std::cerr << "Failed to open input file for rst: input_rst.hex" << std::endl;
        return 1;
    }
    std::string rst_hex_str;
    rst_file >> rst_hex_str;
    if (rst_file.fail() && !rst_file.eof()) {
        std::cerr << "Failed to read hex string for rst from input file: input_rst.hex" << std::endl;
        rst_file.close();
        return 1;
    }
    std::stringstream ss_rst;
    ss_rst << std::hex << rst_hex_str;
    unsigned int temp_rst;
    if (!(ss_rst >> temp_rst)) {
        std::cerr << "Failed to parse hex value for rst: " << rst_hex_str << std::endl;
        rst_file.close();
        return 1;
    }
    rst = static_cast<bool>(temp_rst);
    rst_file.close();



    // Apply inputs to DUT
    _set_port_value<bool>(countbits_ops_i.p_clk, clk);
    _set_port_value<uint8_t>(countbits_ops_i.p_in__d, in_d);
    _set_port_value<uint8_t>(countbits_ops_i.p_inj__in__a__1755377830619__624, inj_in_a_1755377830619_624);
    _set_port_value<bool>(countbits_ops_i.p_inj__in__a__1755377830739__416, inj_in_a_1755377830739_416);
    _set_port_value<uint8_t>(countbits_ops_i.p_inj__in__a__1755377830741__970, inj_in_a_1755377830741_970);
    _set_port_value<uint8_t>(countbits_ops_i.p_inj__in__b__1755377830619__91, inj_in_b_1755377830619_91);
    _set_port_value<uint8_t>(countbits_ops_i.p_inj__in__b__1755377830741__259, inj_in_b_1755377830741_259);
    _set_port_value<uint8_t>(countbits_ops_i.p_inj__in__c__1755377830619__518, inj_in_c_1755377830619_518);
    _set_port_value<bool>(countbits_ops_i.p_inj__in__cond__neq__lhs__1755377830619__284, inj_in_cond_neq_lhs_1755377830619_284);
    _set_port_value<bool>(countbits_ops_i.p_inj__in__cond__neq__rhs__1755377830619__112, inj_in_cond_neq_rhs_1755377830619_112);
    _set_port_value<bool>(countbits_ops_i.p_inj__in__cond__not__1755377830619__249, inj_in_cond_not_1755377830619_249);
    _set_port_value<uint8_t>(countbits_ops_i.p_inj__in__not__else__1755377830619__148, inj_in_not_else_1755377830619_148);
    _set_port_value<uint8_t>(countbits_ops_i.p_inj__in__not__then__1755377830619__89, inj_in_not_then_1755377830619_89);
    _set_port_value<uint32_t>(countbits_ops_i.p_inj__in__val__1755377830600__794, inj_in_val_1755377830600_794);
    _set_port_value<uint32_t>(countbits_ops_i.p_inj__in__val__1755377830612__330, inj_in_val_1755377830612_330);
    _set_port_value<bool>(countbits_ops_i.p_inj__select__a__1755377830600__823, inj_select_a_1755377830600_823);
    _set_port_value<bool>(countbits_ops_i.p_rst, rst);
    // Input application


    // Handle reset, clock toggling, and evaluation

    // Toggle reset signal p_rst
    countbits_ops_i.p_rst.set<bool>(true); // Assert reset (active high)
    countbits_ops_i.step(); // Step to propagate reset assertion
    countbits_ops_i.p_rst.set<bool>(false); // De-assert reset
    countbits_ops_i.step(); // Step to propagate reset de-assertion
    countbits_ops_i.step(); // Extra step for settling after reset

    // Clock toggling with bounded cycles to prevent infinite loops
    for (int cycle = 0; cycle < 50; cycle++) {
        _set_port_value<bool>(countbits_ops_i.p_clk, false);
        countbits_ops_i.step(); // clock low
        _set_port_value<bool>(countbits_ops_i.p_clk, true);
        countbits_ops_i.step(); // clock high
    }

    // Bounded evaluation steps to ensure all logic settles (max 20 steps)
    for (int settle_step = 0; settle_step < 20; settle_step++) {
        countbits_ops_i.step();
    }


    // Write outputs from DUT
    std::ofstream cnt_file("output_cnt.hex");
    if (!cnt_file.is_open()) {
        std::cerr << "Failed to open output file for cnt: output_cnt.hex" << std::endl;
        return 1;
    }
    for (int i = 3; i >= 0; --i) {
        cnt_file << (_get_port_value(countbits_ops_i.p_cnt, i) ? '1' : '0');
    }
    cnt_file << std::endl;
    cnt_file.close();

    std::ofstream inj_out1_1755377830638_51_file("output_inj_out1_1755377830638_51.hex");
    if (!inj_out1_1755377830638_51_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out1_1755377830638_51: output_inj_out1_1755377830638_51.hex" << std::endl;
        return 1;
    }
    for (int i = 7; i >= 0; --i) {
        inj_out1_1755377830638_51_file << (_get_port_value(countbits_ops_i.p_inj__out1__1755377830638__51, i) ? '1' : '0');
    }
    inj_out1_1755377830638_51_file << std::endl;
    inj_out1_1755377830638_51_file.close();

    std::ofstream inj_out2_1755377830638_704_file("output_inj_out2_1755377830638_704.hex");
    if (!inj_out2_1755377830638_704_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out2_1755377830638_704: output_inj_out2_1755377830638_704.hex" << std::endl;
        return 1;
    }
    for (int i = 7; i >= 0; --i) {
        inj_out2_1755377830638_704_file << (_get_port_value(countbits_ops_i.p_inj__out2__1755377830638__704, i) ? '1' : '0');
    }
    inj_out2_1755377830638_704_file << std::endl;
    inj_out2_1755377830638_704_file.close();

    std::ofstream inj_out_a_1755377830739_235_file("output_inj_out_a_1755377830739_235.hex");
    if (!inj_out_a_1755377830739_235_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_a_1755377830739_235: output_inj_out_a_1755377830739_235.hex" << std::endl;
        return 1;
    }
    inj_out_a_1755377830739_235_file << (_get_port_value(countbits_ops_i.p_inj__out__a__1755377830739__235, 0) ? '1' : '0') << std::endl;
    inj_out_a_1755377830739_235_file.close();

    std::ofstream inj_out_eq_1755377830619_469_file("output_inj_out_eq_1755377830619_469.hex");
    if (!inj_out_eq_1755377830619_469_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_eq_1755377830619_469: output_inj_out_eq_1755377830619_469.hex" << std::endl;
        return 1;
    }
    inj_out_eq_1755377830619_469_file << (_get_port_value(countbits_ops_i.p_inj__out__eq__1755377830619__469, 0) ? '1' : '0') << std::endl;
    inj_out_eq_1755377830619_469_file.close();

    std::ofstream inj_out_eq_concat_1755377830619_327_file("output_inj_out_eq_concat_1755377830619_327.hex");
    if (!inj_out_eq_concat_1755377830619_327_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_eq_concat_1755377830619_327: output_inj_out_eq_concat_1755377830619_327.hex" << std::endl;
        return 1;
    }
    inj_out_eq_concat_1755377830619_327_file << (_get_port_value(countbits_ops_i.p_inj__out__eq__concat__1755377830619__327, 0) ? '1' : '0') << std::endl;
    inj_out_eq_concat_1755377830619_327_file.close();

    std::ofstream inj_out_gt_1755377830619_142_file("output_inj_out_gt_1755377830619_142.hex");
    if (!inj_out_gt_1755377830619_142_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_gt_1755377830619_142: output_inj_out_gt_1755377830619_142.hex" << std::endl;
        return 1;
    }
    inj_out_gt_1755377830619_142_file << (_get_port_value(countbits_ops_i.p_inj__out__gt__1755377830619__142, 0) ? '1' : '0') << std::endl;
    inj_out_gt_1755377830619_142_file.close();

    std::ofstream inj_out_gte_1755377830619_400_file("output_inj_out_gte_1755377830619_400.hex");
    if (!inj_out_gte_1755377830619_400_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_gte_1755377830619_400: output_inj_out_gte_1755377830619_400.hex" << std::endl;
        return 1;
    }
    inj_out_gte_1755377830619_400_file << (_get_port_value(countbits_ops_i.p_inj__out__gte__1755377830619__400, 0) ? '1' : '0') << std::endl;
    inj_out_gte_1755377830619_400_file.close();

    std::ofstream inj_out_lt_1755377830619_799_file("output_inj_out_lt_1755377830619_799.hex");
    if (!inj_out_lt_1755377830619_799_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_lt_1755377830619_799: output_inj_out_lt_1755377830619_799.hex" << std::endl;
        return 1;
    }
    inj_out_lt_1755377830619_799_file << (_get_port_value(countbits_ops_i.p_inj__out__lt__1755377830619__799, 0) ? '1' : '0') << std::endl;
    inj_out_lt_1755377830619_799_file.close();

    std::ofstream inj_out_lte_1755377830619_207_file("output_inj_out_lte_1755377830619_207.hex");
    if (!inj_out_lte_1755377830619_207_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_lte_1755377830619_207: output_inj_out_lte_1755377830619_207.hex" << std::endl;
        return 1;
    }
    inj_out_lte_1755377830619_207_file << (_get_port_value(countbits_ops_i.p_inj__out__lte__1755377830619__207, 0) ? '1' : '0') << std::endl;
    inj_out_lte_1755377830619_207_file.close();

    std::ofstream inj_out_neq_1755377830619_807_file("output_inj_out_neq_1755377830619_807.hex");
    if (!inj_out_neq_1755377830619_807_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_neq_1755377830619_807: output_inj_out_neq_1755377830619_807.hex" << std::endl;
        return 1;
    }
    inj_out_neq_1755377830619_807_file << (_get_port_value(countbits_ops_i.p_inj__out__neq__1755377830619__807, 0) ? '1' : '0') << std::endl;
    inj_out_neq_1755377830619_807_file.close();

    std::ofstream inj_out_not_eq_1755377830619_614_file("output_inj_out_not_eq_1755377830619_614.hex");
    if (!inj_out_not_eq_1755377830619_614_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_not_eq_1755377830619_614: output_inj_out_not_eq_1755377830619_614.hex" << std::endl;
        return 1;
    }
    inj_out_not_eq_1755377830619_614_file << (_get_port_value(countbits_ops_i.p_inj__out__not__eq__1755377830619__614, 0) ? '1' : '0') << std::endl;
    inj_out_not_eq_1755377830619_614_file.close();

    std::ofstream inj_out_not_neq_1755377830619_41_file("output_inj_out_not_neq_1755377830619_41.hex");
    if (!inj_out_not_neq_1755377830619_41_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_not_neq_1755377830619_41: output_inj_out_not_neq_1755377830619_41.hex" << std::endl;
        return 1;
    }
    inj_out_not_neq_1755377830619_41_file << (_get_port_value(countbits_ops_i.p_inj__out__not__neq__1755377830619__41, 0) ? '1' : '0') << std::endl;
    inj_out_not_neq_1755377830619_41_file.close();

    std::ofstream inj_out_ternary_1755377830619_422_file("output_inj_out_ternary_1755377830619_422.hex");
    if (!inj_out_ternary_1755377830619_422_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_1755377830619_422: output_inj_out_ternary_1755377830619_422.hex" << std::endl;
        return 1;
    }
    inj_out_ternary_1755377830619_422_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__1755377830619__422, 0) ? '1' : '0') << std::endl;
    inj_out_ternary_1755377830619_422_file.close();

    std::ofstream inj_out_ternary_1bit_0else_1755377830619_72_file("output_inj_out_ternary_1bit_0else_1755377830619_72.hex");
    if (!inj_out_ternary_1bit_0else_1755377830619_72_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_1bit_0else_1755377830619_72: output_inj_out_ternary_1bit_0else_1755377830619_72.hex" << std::endl;
        return 1;
    }
    inj_out_ternary_1bit_0else_1755377830619_72_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__1bit__0else__1755377830619__72, 0) ? '1' : '0') << std::endl;
    inj_out_ternary_1bit_0else_1755377830619_72_file.close();

    std::ofstream inj_out_ternary_1bit_0then_1755377830619_495_file("output_inj_out_ternary_1bit_0then_1755377830619_495.hex");
    if (!inj_out_ternary_1bit_0then_1755377830619_495_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_1bit_0then_1755377830619_495: output_inj_out_ternary_1bit_0then_1755377830619_495.hex" << std::endl;
        return 1;
    }
    inj_out_ternary_1bit_0then_1755377830619_495_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__1bit__0then__1755377830619__495, 0) ? '1' : '0') << std::endl;
    inj_out_ternary_1bit_0then_1755377830619_495_file.close();

    std::ofstream inj_out_ternary_1bit_1else_1755377830619_934_file("output_inj_out_ternary_1bit_1else_1755377830619_934.hex");
    if (!inj_out_ternary_1bit_1else_1755377830619_934_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_1bit_1else_1755377830619_934: output_inj_out_ternary_1bit_1else_1755377830619_934.hex" << std::endl;
        return 1;
    }
    inj_out_ternary_1bit_1else_1755377830619_934_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__1bit__1else__1755377830619__934, 0) ? '1' : '0') << std::endl;
    inj_out_ternary_1bit_1else_1755377830619_934_file.close();

    std::ofstream inj_out_ternary_1bit_1then_1755377830619_922_file("output_inj_out_ternary_1bit_1then_1755377830619_922.hex");
    if (!inj_out_ternary_1bit_1then_1755377830619_922_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_1bit_1then_1755377830619_922: output_inj_out_ternary_1bit_1then_1755377830619_922.hex" << std::endl;
        return 1;
    }
    inj_out_ternary_1bit_1then_1755377830619_922_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__1bit__1then__1755377830619__922, 0) ? '1' : '0') << std::endl;
    inj_out_ternary_1bit_1then_1755377830619_922_file.close();

    std::ofstream inj_out_ternary_const_cond_false_1755377830619_436_file("output_inj_out_ternary_const_cond_false_1755377830619_436.hex");
    if (!inj_out_ternary_const_cond_false_1755377830619_436_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_const_cond_false_1755377830619_436: output_inj_out_ternary_const_cond_false_1755377830619_436.hex" << std::endl;
        return 1;
    }
    inj_out_ternary_const_cond_false_1755377830619_436_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__const__cond__false__1755377830619__436, 0) ? '1' : '0') << std::endl;
    inj_out_ternary_const_cond_false_1755377830619_436_file.close();

    std::ofstream inj_out_ternary_const_cond_true_1755377830619_216_file("output_inj_out_ternary_const_cond_true_1755377830619_216.hex");
    if (!inj_out_ternary_const_cond_true_1755377830619_216_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_const_cond_true_1755377830619_216: output_inj_out_ternary_const_cond_true_1755377830619_216.hex" << std::endl;
        return 1;
    }
    inj_out_ternary_const_cond_true_1755377830619_216_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__const__cond__true__1755377830619__216, 0) ? '1' : '0') << std::endl;
    inj_out_ternary_const_cond_true_1755377830619_216_file.close();

    std::ofstream inj_out_ternary_dec_1755377830620_875_file("output_inj_out_ternary_dec_1755377830620_875.hex");
    if (!inj_out_ternary_dec_1755377830620_875_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_dec_1755377830620_875: output_inj_out_ternary_dec_1755377830620_875.hex" << std::endl;
        return 1;
    }
    for (int i = 7; i >= 0; --i) {
        inj_out_ternary_dec_1755377830620_875_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__dec__1755377830620__875, i) ? '1' : '0');
    }
    inj_out_ternary_dec_1755377830620_875_file << std::endl;
    inj_out_ternary_dec_1755377830620_875_file.close();

    std::ofstream inj_out_ternary_inc_1755377830620_994_file("output_inj_out_ternary_inc_1755377830620_994.hex");
    if (!inj_out_ternary_inc_1755377830620_994_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_inc_1755377830620_994: output_inj_out_ternary_inc_1755377830620_994.hex" << std::endl;
        return 1;
    }
    for (int i = 7; i >= 0; --i) {
        inj_out_ternary_inc_1755377830620_994_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__inc__1755377830620__994, i) ? '1' : '0');
    }
    inj_out_ternary_inc_1755377830620_994_file << std::endl;
    inj_out_ternary_inc_1755377830620_994_file.close();

    std::ofstream inj_out_ternary_pulled_nots_1755377830620_851_file("output_inj_out_ternary_pulled_nots_1755377830620_851.hex");
    if (!inj_out_ternary_pulled_nots_1755377830620_851_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_pulled_nots_1755377830620_851: output_inj_out_ternary_pulled_nots_1755377830620_851.hex" << std::endl;
        return 1;
    }
    for (int i = 7; i >= 0; --i) {
        inj_out_ternary_pulled_nots_1755377830620_851_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__pulled__nots__1755377830620__851, i) ? '1' : '0');
    }
    inj_out_ternary_pulled_nots_1755377830620_851_file << std::endl;
    inj_out_ternary_pulled_nots_1755377830620_851_file.close();

    std::ofstream inj_out_ternary_swapped_cond_1755377830620_243_file("output_inj_out_ternary_swapped_cond_1755377830620_243.hex");
    if (!inj_out_ternary_swapped_cond_1755377830620_243_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_swapped_cond_1755377830620_243: output_inj_out_ternary_swapped_cond_1755377830620_243.hex" << std::endl;
        return 1;
    }
    inj_out_ternary_swapped_cond_1755377830620_243_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__swapped__cond__1755377830620__243, 0) ? '1' : '0') << std::endl;
    inj_out_ternary_swapped_cond_1755377830620_243_file.close();

    std::ofstream inj_out_ternary_swapped_neq_cond_1755377830620_891_file("output_inj_out_ternary_swapped_neq_cond_1755377830620_891.hex");
    if (!inj_out_ternary_swapped_neq_cond_1755377830620_891_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_ternary_swapped_neq_cond_1755377830620_891: output_inj_out_ternary_swapped_neq_cond_1755377830620_891.hex" << std::endl;
        return 1;
    }
    inj_out_ternary_swapped_neq_cond_1755377830620_891_file << (_get_port_value(countbits_ops_i.p_inj__out__ternary__swapped__neq__cond__1755377830620__891, 0) ? '1' : '0') << std::endl;
    inj_out_ternary_swapped_neq_cond_1755377830620_891_file.close();

    std::ofstream inj_out_val_1755377830603_909_file("output_inj_out_val_1755377830603_909.hex");
    if (!inj_out_val_1755377830603_909_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_val_1755377830603_909: output_inj_out_val_1755377830603_909.hex" << std::endl;
        return 1;
    }
    for (int i = 31; i >= 0; --i) {
        inj_out_val_1755377830603_909_file << (_get_port_value(countbits_ops_i.p_inj__out__val__1755377830603__909, i) ? '1' : '0');
    }
    inj_out_val_1755377830603_909_file << std::endl;
    inj_out_val_1755377830603_909_file.close();

    std::ofstream inj_out_val_1755377830612_351_file("output_inj_out_val_1755377830612_351.hex");
    if (!inj_out_val_1755377830612_351_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_val_1755377830612_351: output_inj_out_val_1755377830612_351.hex" << std::endl;
        return 1;
    }
    for (int i = 31; i >= 0; --i) {
        inj_out_val_1755377830612_351_file << (_get_port_value(countbits_ops_i.p_inj__out__val__1755377830612__351, i) ? '1' : '0');
    }
    inj_out_val_1755377830612_351_file << std::endl;
    inj_out_val_1755377830612_351_file.close();

    std::ofstream inj_out_val_1755377831049_224_file("output_inj_out_val_1755377831049_224.hex");
    if (!inj_out_val_1755377831049_224_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_val_1755377831049_224: output_inj_out_val_1755377831049_224.hex" << std::endl;
        return 1;
    }
    for (int i = 31; i >= 0; --i) {
        inj_out_val_1755377831049_224_file << (_get_port_value(countbits_ops_i.p_inj__out__val__1755377831049__224, i) ? '1' : '0');
    }
    inj_out_val_1755377831049_224_file << std::endl;
    inj_out_val_1755377831049_224_file.close();

    std::ofstream inj_out_y_1755377830741_755_file("output_inj_out_y_1755377830741_755.hex");
    if (!inj_out_y_1755377830741_755_file.is_open()) {
        std::cerr << "Failed to open output file for inj_out_y_1755377830741_755: output_inj_out_y_1755377830741_755.hex" << std::endl;
        return 1;
    }
    for (int i = 3; i >= 0; --i) {
        inj_out_y_1755377830741_755_file << (_get_port_value(countbits_ops_i.p_inj__out__y__1755377830741__755, i) ? '1' : '0');
    }
    inj_out_y_1755377830741_755_file << std::endl;
    inj_out_y_1755377830741_755_file.close();

    std::ofstream inj_reset_n_1755377830599_177_file("output_inj_reset_n_1755377830599_177.hex");
    if (!inj_reset_n_1755377830599_177_file.is_open()) {
        std::cerr << "Failed to open output file for inj_reset_n_1755377830599_177: output_inj_reset_n_1755377830599_177.hex" << std::endl;
        return 1;
    }
    inj_reset_n_1755377830599_177_file << (_get_port_value(countbits_ops_i.p_inj__reset__n__1755377830599__177, 0) ? '1' : '0') << std::endl;
    inj_reset_n_1755377830599_177_file.close();

    std::ofstream inj_sum_1755377830891_369_file("output_inj_sum_1755377830891_369.hex");
    if (!inj_sum_1755377830891_369_file.is_open()) {
        std::cerr << "Failed to open output file for inj_sum_1755377830891_369: output_inj_sum_1755377830891_369.hex" << std::endl;
        return 1;
    }
    for (int i = 3; i >= 0; --i) {
        inj_sum_1755377830891_369_file << (_get_port_value(countbits_ops_i.p_inj__sum__1755377830891__369, i) ? '1' : '0');
    }
    inj_sum_1755377830891_369_file << std::endl;
    inj_sum_1755377830891_369_file.close();



    return 0;
}
