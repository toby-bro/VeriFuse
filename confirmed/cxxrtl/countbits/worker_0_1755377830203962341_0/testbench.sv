// Generated SystemVerilog testbench
// Do not edit this file directly : edit the template in internal/testgen/testbenches.go and generator.go

module top;
    logic clk;
    logic [7:0] in_d;
    logic [3:0] inj_a_1755377830490_312;
    logic inj_a_1755377830492_285;
    logic [3:0] inj_b_1755377830490_364;
    logic inj_b_1755377830492_365;
    logic [1:0] inj_case_expr_1755377830490_540;
    logic [31:0] inj_dummy_in_1755377830763_153;
    logic inj_enable_in_1755377830528_286;
    logic [7:0] inj_in_a_1755377830531_804;
    logic rst;
    logic [3:0] cnt;
    logic [4:0] inj_internal_out_1755377830490_785;
    logic [4:0] inj_internal_out_1755377831049_504;
    logic inj_out_1755377830528_293;
    logic [7:0] inj_out_1755377831208_1;
    logic inj_out_a_1755377830867_226;
    logic [31:0] inj_out_b_1755377830867_326;
    logic [15:0] inj_out_concat_1755377830531_635;
    logic inj_out_res_1755377830620_21;
    logic [7:0] inj_out_sum_m1_1755377830614_891;
    logic [31:0] inj_out_val_1755377830763_115;
    logic inj_q_out_1755377830519_395;
    logic [3:0] inj_sum_1755377830490_590;
    logic inj_sum_1755377830492_554;
    logic [15:0] inj_sum_out_i_1755377830637_404;
    logic [7:0] inj_var_out_m1_1755377830614_259;

    countbits_ops dut (
        .clk(clk),
        .in_d(in_d),
        .inj_a_1755377830490_312(inj_a_1755377830490_312),
        .inj_a_1755377830492_285(inj_a_1755377830492_285),
        .inj_b_1755377830490_364(inj_b_1755377830490_364),
        .inj_b_1755377830492_365(inj_b_1755377830492_365),
        .inj_case_expr_1755377830490_540(inj_case_expr_1755377830490_540),
        .inj_dummy_in_1755377830763_153(inj_dummy_in_1755377830763_153),
        .inj_enable_in_1755377830528_286(inj_enable_in_1755377830528_286),
        .inj_in_a_1755377830531_804(inj_in_a_1755377830531_804),
        .rst(rst),
        .cnt(cnt),
        .inj_internal_out_1755377830490_785(inj_internal_out_1755377830490_785),
        .inj_internal_out_1755377831049_504(inj_internal_out_1755377831049_504),
        .inj_out_1755377830528_293(inj_out_1755377830528_293),
        .inj_out_1755377831208_1(inj_out_1755377831208_1),
        .inj_out_a_1755377830867_226(inj_out_a_1755377830867_226),
        .inj_out_b_1755377830867_326(inj_out_b_1755377830867_326),
        .inj_out_concat_1755377830531_635(inj_out_concat_1755377830531_635),
        .inj_out_res_1755377830620_21(inj_out_res_1755377830620_21),
        .inj_out_sum_m1_1755377830614_891(inj_out_sum_m1_1755377830614_891),
        .inj_out_val_1755377830763_115(inj_out_val_1755377830763_115),
        .inj_q_out_1755377830519_395(inj_q_out_1755377830519_395),
        .inj_sum_1755377830490_590(inj_sum_1755377830490_590),
        .inj_sum_1755377830492_554(inj_sum_1755377830492_554),
        .inj_sum_out_i_1755377830637_404(inj_sum_out_i_1755377830637_404),
        .inj_var_out_m1_1755377830614_259(inj_var_out_m1_1755377830614_259)
    );


    initial begin
        string line;
        int fd;
        int status;

        // Read 9 input files
        clk = 0;

        fd = $fopen("input_in_d.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_in_d.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", in_d);
        $fclose(fd);

        fd = $fopen("input_inj_a_1755377830490_312.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_a_1755377830490_312.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_a_1755377830490_312);
        $fclose(fd);

        fd = $fopen("input_inj_a_1755377830492_285.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_a_1755377830492_285.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_a_1755377830492_285);
        $fclose(fd);

        fd = $fopen("input_inj_b_1755377830490_364.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_b_1755377830490_364.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_b_1755377830490_364);
        $fclose(fd);

        fd = $fopen("input_inj_b_1755377830492_365.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_b_1755377830492_365.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_b_1755377830492_365);
        $fclose(fd);

        fd = $fopen("input_inj_case_expr_1755377830490_540.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_case_expr_1755377830490_540.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_case_expr_1755377830490_540);
        $fclose(fd);

        fd = $fopen("input_inj_dummy_in_1755377830763_153.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_dummy_in_1755377830763_153.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_dummy_in_1755377830763_153);
        $fclose(fd);

        fd = $fopen("input_inj_enable_in_1755377830528_286.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_enable_in_1755377830528_286.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_enable_in_1755377830528_286);
        $fclose(fd);

        fd = $fopen("input_inj_in_a_1755377830531_804.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_in_a_1755377830531_804.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_in_a_1755377830531_804);
        $fclose(fd);
        rst = 0;


        // Toggle reset if a reset signal was identified

        // Toggle reset signal rst
        rst = 1; // Assert reset (active high)
        #10;
        rst = 0; // De-assert reset
        #10; // Wait after de-asserting reset


        // Toggle clock signals

        // Toggle clocks for several cycles with timeout protection
        // Set simulation timeout to prevent infinite loops
        fork
            begin
                #780;
                $display("ERROR: Simulation timeout after 780 time units");
                $finish;
            end
            begin
                repeat (50) begin
                    clk = 0;
                    #5;
                    clk = 1;
                    #5;
                end
            end
        join_any
        disable fork; // Kill timeout process


        // Allow module to process and settle
        #10; // Increased delay for settling
        
        // Additional clock cycles to ensure all sequential logic settles
        #10;
        #10;

        // Write 16 output files

        fd = $fopen("output_cnt.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_cnt.hex' for port 'cnt'.", "output_cnt.hex", "cnt");
            $finish;
        end
        for (int i = 3; i >= 0; i--) begin
            $fwrite(fd, "%b", cnt[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_internal_out_1755377830490_785.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_internal_out_1755377830490_785.hex' for port 'inj_internal_out_1755377830490_785'.", "output_inj_internal_out_1755377830490_785.hex", "inj_internal_out_1755377830490_785");
            $finish;
        end
        for (int i = 4; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_internal_out_1755377830490_785[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_internal_out_1755377831049_504.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_internal_out_1755377831049_504.hex' for port 'inj_internal_out_1755377831049_504'.", "output_inj_internal_out_1755377831049_504.hex", "inj_internal_out_1755377831049_504");
            $finish;
        end
        for (int i = 4; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_internal_out_1755377831049_504[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_1755377830528_293.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_1755377830528_293.hex' for port 'inj_out_1755377830528_293'.", "output_inj_out_1755377830528_293.hex", "inj_out_1755377830528_293");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_out_1755377830528_293);
        $fclose(fd);

        fd = $fopen("output_inj_out_1755377831208_1.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_1755377831208_1.hex' for port 'inj_out_1755377831208_1'.", "output_inj_out_1755377831208_1.hex", "inj_out_1755377831208_1");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_1755377831208_1[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_a_1755377830867_226.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_a_1755377830867_226.hex' for port 'inj_out_a_1755377830867_226'.", "output_inj_out_a_1755377830867_226.hex", "inj_out_a_1755377830867_226");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_out_a_1755377830867_226);
        $fclose(fd);

        fd = $fopen("output_inj_out_b_1755377830867_326.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_b_1755377830867_326.hex' for port 'inj_out_b_1755377830867_326'.", "output_inj_out_b_1755377830867_326.hex", "inj_out_b_1755377830867_326");
            $finish;
        end
        for (int i = 31; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_b_1755377830867_326[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_concat_1755377830531_635.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_concat_1755377830531_635.hex' for port 'inj_out_concat_1755377830531_635'.", "output_inj_out_concat_1755377830531_635.hex", "inj_out_concat_1755377830531_635");
            $finish;
        end
        for (int i = 15; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_concat_1755377830531_635[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_res_1755377830620_21.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_res_1755377830620_21.hex' for port 'inj_out_res_1755377830620_21'.", "output_inj_out_res_1755377830620_21.hex", "inj_out_res_1755377830620_21");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_out_res_1755377830620_21);
        $fclose(fd);

        fd = $fopen("output_inj_out_sum_m1_1755377830614_891.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_sum_m1_1755377830614_891.hex' for port 'inj_out_sum_m1_1755377830614_891'.", "output_inj_out_sum_m1_1755377830614_891.hex", "inj_out_sum_m1_1755377830614_891");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_sum_m1_1755377830614_891[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_val_1755377830763_115.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_val_1755377830763_115.hex' for port 'inj_out_val_1755377830763_115'.", "output_inj_out_val_1755377830763_115.hex", "inj_out_val_1755377830763_115");
            $finish;
        end
        for (int i = 31; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_val_1755377830763_115[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_q_out_1755377830519_395.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_q_out_1755377830519_395.hex' for port 'inj_q_out_1755377830519_395'.", "output_inj_q_out_1755377830519_395.hex", "inj_q_out_1755377830519_395");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_q_out_1755377830519_395);
        $fclose(fd);

        fd = $fopen("output_inj_sum_1755377830490_590.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_sum_1755377830490_590.hex' for port 'inj_sum_1755377830490_590'.", "output_inj_sum_1755377830490_590.hex", "inj_sum_1755377830490_590");
            $finish;
        end
        for (int i = 3; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_sum_1755377830490_590[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_sum_1755377830492_554.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_sum_1755377830492_554.hex' for port 'inj_sum_1755377830492_554'.", "output_inj_sum_1755377830492_554.hex", "inj_sum_1755377830492_554");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_sum_1755377830492_554);
        $fclose(fd);

        fd = $fopen("output_inj_sum_out_i_1755377830637_404.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_sum_out_i_1755377830637_404.hex' for port 'inj_sum_out_i_1755377830637_404'.", "output_inj_sum_out_i_1755377830637_404.hex", "inj_sum_out_i_1755377830637_404");
            $finish;
        end
        for (int i = 15; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_sum_out_i_1755377830637_404[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_var_out_m1_1755377830614_259.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_var_out_m1_1755377830614_259.hex' for port 'inj_var_out_m1_1755377830614_259'.", "output_inj_var_out_m1_1755377830614_259.hex", "inj_var_out_m1_1755377830614_259");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_var_out_m1_1755377830614_259[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);


        $finish;
    end
endmodule