/* Generated by Yosys 0.54 (git sha1 db72ec3bd, g++ 12.2.0-14+deb12u1 -fPIC -O3) */

module minimal_repro(clk, out);
  reg _0_;
  reg _1_;
  reg _2_;
  wire _3_;
  input clk;
  wire clk;
  wire condition;
  output out;
  reg out;
  reg q1;
  assign _3_ = ~ q1;
  always_comb begin
    _0_ = out;
    if (condition) begin
    end else begin
      _0_ = 1'h1;
    end
  end
  always_ff @(posedge clk) begin
      out <= _0_;
  end
  always_comb begin
    _2_ = 1'hx;
  end
  always_comb begin
  end
  initial begin
      q1 <= _2_;
  end
  always_comb begin
    _1_ = 1'h0;
  end
  always_ff @(posedge clk) begin
      q1 <= _1_;
  end
  assign condition = _3_;
endmodule
