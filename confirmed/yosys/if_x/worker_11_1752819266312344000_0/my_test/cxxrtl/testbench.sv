// Generated SystemVerilog testbench
// Do not edit this file directly : edit the template in internal/testgen/testbenches.go and generator.go

module top;
    logic clk;
    logic out2;

    topi dut (
        .clk(clk),
        .out2(out2)
    );


    initial begin
        string line;
        int fd;
        int status;

        // Read 0 input files
        clk = 0;


        // Toggle reset if a reset signal was identified


        // Toggle clock signals

        // Toggle clocks for several cycles with timeout protection
        // Set simulation timeout to prevent infinite loops
        fork
            begin
                #780;
                $display("ERROR: Simulation timeout after 780 time units");
                $finish;
            end
            begin
                repeat (50) begin
                    clk = 0;
                    #5;
                    clk = 1;
                    #5;
                end
            end
        join_any
        disable fork; // Kill timeout process


        // Allow module to process and settle
        #10; // Increased delay for settling
        
        // Additional clock cycles to ensure all sequential logic settles
        #10;
        #10;

        // Write 1 output files

        fd = $fopen("output_out2.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_out2.hex' for port 'out2'.", "output_out2.hex", "out2");
            $finish;
        end
        $fwrite(fd, "%b\n", out2);
        $fclose(fd);


        $finish;
    end
endmodule