// Generated SystemVerilog testbench
// Do not edit this file directly : edit the template in internal/testgen/testbenches.go and generator.go

module top;
    logic [7:0] a;
    logic [7:0] b;
    logic inj_condition_h_1751608204132_423;
    logic [3:0] inj_data0_1751608204137_416;
    logic [3:0] inj_data1_1751608204137_850;
    logic [3:0] inj_data2_1751608204137_376;
    logic [3:0] inj_data3_1751608204137_768;
    logic [15:0] inj_data_in_pa_1751608204130_326;
    logic inj_enable_pv_1751608204130_819;
    logic inj_in_cond_ternary_1751608204132_347;
    logic [7:0] inj_in_val1_1751608204132_518;
    logic [7:0] inj_in_val2_1751608204132_694;
    logic [1:0] inj_large_data_in_1751608204135_837;
    logic [3:0] inj_data_out_case_1751608204137_757;
    logic [7:0] inj_data_out_pa_1751608204130_355;
    logic [3:0] inj_data_out_pv_1751608204130_814;
    logic [4:0] inj_internal_out_1751608204150_670;
    logic [7:0] inj_large_sum_out_1751608204135_346;
    logic inj_match_x_neq_1751608204147_458;
    logic inj_match_z_eq_1751608204147_256;
    logic [7:0] inj_out1_z_1751608204148_329;
    logic [7:0] inj_out2_z_1751608204148_284;
    logic [7:0] inj_out_1751608204130_793;
    logic [3:0] inj_out_1751608204133_79;
    logic [7:0] inj_out_reg_h_1751608204132_733;
    logic [7:0] inj_out_ternary_result_1751608204132_418;
    logic [8:0] sum;
    logic [3:0] inj_data_io_1751608204147_331;

    simple_sub dut (
        .a(a),
        .b(b),
        .inj_condition_h_1751608204132_423(inj_condition_h_1751608204132_423),
        .inj_data0_1751608204137_416(inj_data0_1751608204137_416),
        .inj_data1_1751608204137_850(inj_data1_1751608204137_850),
        .inj_data2_1751608204137_376(inj_data2_1751608204137_376),
        .inj_data3_1751608204137_768(inj_data3_1751608204137_768),
        .inj_data_in_pa_1751608204130_326(inj_data_in_pa_1751608204130_326),
        .inj_enable_pv_1751608204130_819(inj_enable_pv_1751608204130_819),
        .inj_in_cond_ternary_1751608204132_347(inj_in_cond_ternary_1751608204132_347),
        .inj_in_val1_1751608204132_518(inj_in_val1_1751608204132_518),
        .inj_in_val2_1751608204132_694(inj_in_val2_1751608204132_694),
        .inj_large_data_in_1751608204135_837(inj_large_data_in_1751608204135_837),
        .inj_data_out_case_1751608204137_757(inj_data_out_case_1751608204137_757),
        .inj_data_out_pa_1751608204130_355(inj_data_out_pa_1751608204130_355),
        .inj_data_out_pv_1751608204130_814(inj_data_out_pv_1751608204130_814),
        .inj_internal_out_1751608204150_670(inj_internal_out_1751608204150_670),
        .inj_large_sum_out_1751608204135_346(inj_large_sum_out_1751608204135_346),
        .inj_match_x_neq_1751608204147_458(inj_match_x_neq_1751608204147_458),
        .inj_match_z_eq_1751608204147_256(inj_match_z_eq_1751608204147_256),
        .inj_out1_z_1751608204148_329(inj_out1_z_1751608204148_329),
        .inj_out2_z_1751608204148_284(inj_out2_z_1751608204148_284),
        .inj_out_1751608204130_793(inj_out_1751608204130_793),
        .inj_out_1751608204133_79(inj_out_1751608204133_79),
        .inj_out_reg_h_1751608204132_733(inj_out_reg_h_1751608204132_733),
        .inj_out_ternary_result_1751608204132_418(inj_out_ternary_result_1751608204132_418),
        .sum(sum),
        .inj_data_io_1751608204147_331(inj_data_io_1751608204147_331)
    );


    initial begin
        string line;
        int fd;
        int status;

        // Read 14 input files

        fd = $fopen("input_a.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_a.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", a);
        $fclose(fd);

        fd = $fopen("input_b.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_b.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", b);
        $fclose(fd);

        fd = $fopen("input_inj_condition_h_1751608204132_423.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_condition_h_1751608204132_423.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_condition_h_1751608204132_423);
        $fclose(fd);

        fd = $fopen("input_inj_data0_1751608204137_416.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_data0_1751608204137_416.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_data0_1751608204137_416);
        $fclose(fd);

        fd = $fopen("input_inj_data1_1751608204137_850.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_data1_1751608204137_850.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_data1_1751608204137_850);
        $fclose(fd);

        fd = $fopen("input_inj_data2_1751608204137_376.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_data2_1751608204137_376.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_data2_1751608204137_376);
        $fclose(fd);

        fd = $fopen("input_inj_data3_1751608204137_768.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_data3_1751608204137_768.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_data3_1751608204137_768);
        $fclose(fd);

        fd = $fopen("input_inj_data_in_pa_1751608204130_326.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_data_in_pa_1751608204130_326.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_data_in_pa_1751608204130_326);
        $fclose(fd);

        fd = $fopen("input_inj_enable_pv_1751608204130_819.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_enable_pv_1751608204130_819.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_enable_pv_1751608204130_819);
        $fclose(fd);

        fd = $fopen("input_inj_in_cond_ternary_1751608204132_347.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_in_cond_ternary_1751608204132_347.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_in_cond_ternary_1751608204132_347);
        $fclose(fd);

        fd = $fopen("input_inj_in_val1_1751608204132_518.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_in_val1_1751608204132_518.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_in_val1_1751608204132_518);
        $fclose(fd);

        fd = $fopen("input_inj_in_val2_1751608204132_694.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_in_val2_1751608204132_694.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_in_val2_1751608204132_694);
        $fclose(fd);

        fd = $fopen("input_inj_large_data_in_1751608204135_837.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_large_data_in_1751608204135_837.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_large_data_in_1751608204135_837);
        $fclose(fd);

        fd = $fopen("input_inj_data_io_1751608204147_331.hex", "r");
        if (fd == 0) begin
            $display("Error: Unable to open input_inj_data_io_1751608204147_331.hex");
            $finish;
        end
        status = $fgets(line, fd);
        status = $sscanf(line, "%h", inj_data_io_1751608204147_331);
        $fclose(fd);


        // Toggle reset if a reset signal was identified


        // Toggle clock signals

        // Allow module to process
        #20;


        // Allow module to process and settle
        #10; // Increased delay for settling
        
        // Additional clock cycles to ensure all sequential logic settles
        #10;
        #10;

        // Write 14 output files

        fd = $fopen("output_inj_data_out_case_1751608204137_757.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_data_out_case_1751608204137_757.hex' for port 'inj_data_out_case_1751608204137_757'.", "output_inj_data_out_case_1751608204137_757.hex", "inj_data_out_case_1751608204137_757");
            $finish;
        end
        for (int i = 3; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_data_out_case_1751608204137_757[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_data_out_pa_1751608204130_355.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_data_out_pa_1751608204130_355.hex' for port 'inj_data_out_pa_1751608204130_355'.", "output_inj_data_out_pa_1751608204130_355.hex", "inj_data_out_pa_1751608204130_355");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_data_out_pa_1751608204130_355[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_data_out_pv_1751608204130_814.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_data_out_pv_1751608204130_814.hex' for port 'inj_data_out_pv_1751608204130_814'.", "output_inj_data_out_pv_1751608204130_814.hex", "inj_data_out_pv_1751608204130_814");
            $finish;
        end
        for (int i = 3; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_data_out_pv_1751608204130_814[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_internal_out_1751608204150_670.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_internal_out_1751608204150_670.hex' for port 'inj_internal_out_1751608204150_670'.", "output_inj_internal_out_1751608204150_670.hex", "inj_internal_out_1751608204150_670");
            $finish;
        end
        for (int i = 4; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_internal_out_1751608204150_670[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_large_sum_out_1751608204135_346.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_large_sum_out_1751608204135_346.hex' for port 'inj_large_sum_out_1751608204135_346'.", "output_inj_large_sum_out_1751608204135_346.hex", "inj_large_sum_out_1751608204135_346");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_large_sum_out_1751608204135_346[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_match_x_neq_1751608204147_458.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_match_x_neq_1751608204147_458.hex' for port 'inj_match_x_neq_1751608204147_458'.", "output_inj_match_x_neq_1751608204147_458.hex", "inj_match_x_neq_1751608204147_458");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_match_x_neq_1751608204147_458);
        $fclose(fd);

        fd = $fopen("output_inj_match_z_eq_1751608204147_256.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_match_z_eq_1751608204147_256.hex' for port 'inj_match_z_eq_1751608204147_256'.", "output_inj_match_z_eq_1751608204147_256.hex", "inj_match_z_eq_1751608204147_256");
            $finish;
        end
        $fwrite(fd, "%b\n", inj_match_z_eq_1751608204147_256);
        $fclose(fd);

        fd = $fopen("output_inj_out1_z_1751608204148_329.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out1_z_1751608204148_329.hex' for port 'inj_out1_z_1751608204148_329'.", "output_inj_out1_z_1751608204148_329.hex", "inj_out1_z_1751608204148_329");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out1_z_1751608204148_329[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out2_z_1751608204148_284.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out2_z_1751608204148_284.hex' for port 'inj_out2_z_1751608204148_284'.", "output_inj_out2_z_1751608204148_284.hex", "inj_out2_z_1751608204148_284");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out2_z_1751608204148_284[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_1751608204130_793.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_1751608204130_793.hex' for port 'inj_out_1751608204130_793'.", "output_inj_out_1751608204130_793.hex", "inj_out_1751608204130_793");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_1751608204130_793[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_1751608204133_79.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_1751608204133_79.hex' for port 'inj_out_1751608204133_79'.", "output_inj_out_1751608204133_79.hex", "inj_out_1751608204133_79");
            $finish;
        end
        for (int i = 3; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_1751608204133_79[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_reg_h_1751608204132_733.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_reg_h_1751608204132_733.hex' for port 'inj_out_reg_h_1751608204132_733'.", "output_inj_out_reg_h_1751608204132_733.hex", "inj_out_reg_h_1751608204132_733");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_reg_h_1751608204132_733[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_inj_out_ternary_result_1751608204132_418.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_inj_out_ternary_result_1751608204132_418.hex' for port 'inj_out_ternary_result_1751608204132_418'.", "output_inj_out_ternary_result_1751608204132_418.hex", "inj_out_ternary_result_1751608204132_418");
            $finish;
        end
        for (int i = 7; i >= 0; i--) begin
            $fwrite(fd, "%b", inj_out_ternary_result_1751608204132_418[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);

        fd = $fopen("output_sum.hex", "w");
        if (fd == 0) begin
            $display("Error: Unable to open output file 'output_sum.hex' for port 'sum'.", "output_sum.hex", "sum");
            $finish;
        end
        for (int i = 8; i >= 0; i--) begin
            $fwrite(fd, "%b", sum[i]);
        end
        $fwrite(fd, "\n");        $fclose(fd);


        $finish;
    end
endmodule