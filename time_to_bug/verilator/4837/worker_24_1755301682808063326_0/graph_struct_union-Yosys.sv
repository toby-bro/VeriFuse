// Yosys script used:
// read_verilog -sv dist/worker_24_1755301682808063326_0/graph_struct_union.sv; prep -top graph_struct_union; fsm_detect; opt_expr -keepdc; opt_mem; fsm_opt; fsm_extract; techmap; fsm_map; opt_clean; opt_dff -nodffe; opt_expr -fine; opt_merge; proc; abc; opt_reduce; opt_lut; opt_clean -purge; fsm_recode; fsm_expand; opt_dff; write_verilog -sv -noattr dist/worker_24_1755301682808063326_0/graph_struct_union-Yosys.sv
/* Generated by Yosys 0.55+23 (git sha1 e57a2b944, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

module graph_struct_union(bus_in, clk, inj_a_1755301683265_754, inj_b_1755301683265_298, inj_data_value_1755301683149_555, inj_in_false_d_1755301683159_692, inj_in_port_1755301683145_593, inj_in_true_d_1755301683159_497, inj_level1_en_1755301683149_533, inj_level2_en_1755301683149_657, rst, bus_out, inj_out_concat_1755301683265_998, inj_out_port_1755301683145_366, inj_out_reg_d_1755301683159_117, inj_out_val_1755301683195_143, inj_result_out_1755301683149_237);
  wire [7:0] _00_;
  input [31:0] bus_in;
  wire [31:0] bus_in;
  output [31:0] bus_out;
  wire [31:0] bus_out;
  input clk;
  wire clk;
  input [3:0] inj_a_1755301683265_754;
  wire [3:0] inj_a_1755301683265_754;
  input [3:0] inj_b_1755301683265_298;
  wire [3:0] inj_b_1755301683265_298;
  input inj_data_value_1755301683149_555;
  wire inj_data_value_1755301683149_555;
  input [7:0] inj_in_false_d_1755301683159_692;
  wire [7:0] inj_in_false_d_1755301683159_692;
  input [31:0] inj_in_port_1755301683145_593;
  wire [31:0] inj_in_port_1755301683145_593;
  input [7:0] inj_in_true_d_1755301683159_497;
  wire [7:0] inj_in_true_d_1755301683159_497;
  input inj_level1_en_1755301683149_533;
  wire inj_level1_en_1755301683149_533;
  input inj_level2_en_1755301683149_657;
  wire inj_level2_en_1755301683149_657;
  output [15:0] inj_out_concat_1755301683265_998;
  wire [15:0] inj_out_concat_1755301683265_998;
  output [31:0] inj_out_port_1755301683145_366;
  wire [31:0] inj_out_port_1755301683145_366;
  output [7:0] inj_out_reg_d_1755301683159_117;
  reg [7:0] inj_out_reg_d_1755301683159_117;
  output [31:0] inj_out_val_1755301683195_143;
  wire [31:0] inj_out_val_1755301683195_143;
  output inj_result_out_1755301683149_237;
  wire inj_result_out_1755301683149_237;
  input rst;
  wire rst;
  assign _00_[4] = inj_level2_en_1755301683149_657 ? inj_in_true_d_1755301683159_497[4] : inj_in_false_d_1755301683159_692[4];
  assign _00_[5] = inj_level2_en_1755301683149_657 ? inj_in_true_d_1755301683159_497[5] : inj_in_false_d_1755301683159_692[5];
  assign _00_[6] = inj_level2_en_1755301683149_657 ? inj_in_true_d_1755301683159_497[6] : inj_in_false_d_1755301683159_692[6];
  assign _00_[7] = inj_level2_en_1755301683149_657 ? inj_in_true_d_1755301683159_497[7] : inj_in_false_d_1755301683159_692[7];
  assign _00_[0] = inj_level2_en_1755301683149_657 ? inj_in_true_d_1755301683159_497[0] : inj_in_false_d_1755301683159_692[0];
  assign _00_[1] = inj_level2_en_1755301683149_657 ? inj_in_true_d_1755301683159_497[1] : inj_in_false_d_1755301683159_692[1];
  assign _00_[2] = inj_level2_en_1755301683149_657 ? inj_in_true_d_1755301683159_497[2] : inj_in_false_d_1755301683159_692[2];
  assign _00_[3] = inj_level2_en_1755301683149_657 ? inj_in_true_d_1755301683159_497[3] : inj_in_false_d_1755301683159_692[3];
  always_ff @(posedge clk)
    inj_out_reg_d_1755301683159_117[0] <= _00_[0];
  always_ff @(posedge clk)
    inj_out_reg_d_1755301683159_117[1] <= _00_[1];
  always_ff @(posedge clk)
    inj_out_reg_d_1755301683159_117[2] <= _00_[2];
  always_ff @(posedge clk)
    inj_out_reg_d_1755301683159_117[3] <= _00_[3];
  always_ff @(posedge clk)
    inj_out_reg_d_1755301683159_117[4] <= _00_[4];
  always_ff @(posedge clk)
    inj_out_reg_d_1755301683159_117[5] <= _00_[5];
  always_ff @(posedge clk)
    inj_out_reg_d_1755301683159_117[6] <= _00_[6];
  always_ff @(posedge clk)
    inj_out_reg_d_1755301683159_117[7] <= _00_[7];
  nested_blocks nested_blocks_inst_1755301683149_2222 (
    .data_value(inj_data_value_1755301683149_555),
    .level1_en(inj_level1_en_1755301683149_533),
    .level2_en(inj_level2_en_1755301683149_657),
    .result_out(inj_result_out_1755301683149_237)
  );
  assign bus_out = { bus_in[7:0], bus_in[15:8], bus_in[23:16], bus_in[31:24] };
  assign inj_out_concat_1755301683265_998 = { inj_a_1755301683265_754, inj_b_1755301683265_298, inj_in_false_d_1755301683159_692 };
  assign inj_out_port_1755301683145_366 = inj_in_port_1755301683145_593;
  assign inj_out_val_1755301683195_143 = 32'd32;
endmodule

module nested_blocks(data_value, level1_en, level2_en, result_out);
  wire _0_;
  input data_value;
  wire data_value;
  input level1_en;
  wire level1_en;
  input level2_en;
  wire level2_en;
  output result_out;
  wire result_out;
  assign _0_ = data_value & level2_en;
  assign result_out = level1_en & _0_;
endmodule
